name: build

on:
  push:
    branches:
      - '**'
    tags:
      - 'v**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.8'
        architecture: 'x64'
    - name: Install the library
      run: |
        pip install nbdev jupyter wheel twine
        python -m pip install git+https://github.com/ryanfobel/KiField.git@add-quantity
        pip install -e .
    - name: Run tests
      run: |
        kh_setup_test_repo
        python -c "from kicad_helpers import get_manufacturers; print(get_manufacturers('_temp'))"
        kh_update --overwrite --root _temp
        kh_export_man --root _temp --output _temp/outputs
        ls -l _temp/outputs
        rm -rf _temp/outputs
    # - name: Read all notebooks
    #   run: |
    #     nbdev_read_nbs
    # - name: Check if all notebooks are cleaned
    #   run: |
    #     echo "Check we are starting with clean git checkout"
    #     if [ -n "$(git status -uno -s)" ]; then echo "git status is not clean"; false; fi
    #     echo "Trying to strip out notebooks"
    #     nbdev_clean_nbs
    #     echo "Check that strip out was unnecessary"
    #     git status -s # display the status to see which nbs need cleaning up
    #     if [ -n "$(git status -uno -s)" ]; then echo -e "!!! Detected unstripped out notebooks\n!!!Remember to run nbdev_install_git_hooks"; false; fi
    # - name: Check if there is no diff library/notebooks
    #   run: |
    #     if [ -n "$(nbdev_diff_nbs)" ]; then echo -e "!!! Detected difference between the notebooks and the library"; false; fi
    # - name: Run tests
    #   run: |

    #     kh_setup_test_repo
    #     nbdev_test_nbs
    - name: Get the version
      if: startsWith(github.ref, 'refs/tags/v')
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
    - name: Publish to PyPi
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        VERSION: ${{ steps.get_version.outputs.VERSION }}
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        sed -i "s/version =.*/version = $VERSION/g" settings.ini
        make pypi
